{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","visibleTodos","setVisibleTodos","setTitle","selectedUser","setSelectedUser","isTitleEmpty","setIsTitleEmpty","isUserSelected","setIsUserSelected","action","method","onSubmit","event","preventDefault","trimedTitle","trim","todosId","el","newTodoId","Math","max","prevVisibleTodos","newTodo","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3694e222.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo\n}\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos:Todo[]\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import React, { ChangeEvent, FormEvent, useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nconst getUser = (userId: number): User | null => {\n  const foundedUser = usersFromServer.find(user => user.id === userId);\n\n  return foundedUser || null;\n};\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState(0);\n\n  const [isTitleEmpty, setIsTitleEmpty] = useState(false);\n  const [isUserSelected, setIsUserSelected] = useState(false);\n\n  const handleTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsTitleEmpty(false);\n  };\n\n  const handleUser = (event: ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(+event.target.value);\n    setIsUserSelected(false);\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    const trimedTitle = title.trim();\n\n    if (!selectedUser) {\n      setIsUserSelected(true);\n    }\n\n    if (!trimedTitle) {\n      setIsTitleEmpty(true);\n    }\n\n    if (trimedTitle && selectedUser) {\n      const todosId = [...visibleTodos].map(el => el.id);\n      const newTodoId = Math.max(...todosId);\n\n      setVisibleTodos((prevVisibleTodos) => {\n        const newTodo = {\n          id: newTodoId + 1,\n          title,\n          userId: selectedUser,\n          completed: false,\n          user: getUser(selectedUser),\n        };\n\n        return [...prevVisibleTodos, newTodo];\n      });\n\n      setTitle('');\n      setSelectedUser(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              placeholder=\"Enter a title\"\n              data-cy=\"titleInput\"\n              name=\"title\"\n              value={title}\n              onChange={handleTitle}\n            />\n          </label>\n          {isTitleEmpty\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              name=\"user\"\n              value={selectedUser}\n              onChange={handleUser}\n            >\n              <option value={0} disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {isUserSelected\n          && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}